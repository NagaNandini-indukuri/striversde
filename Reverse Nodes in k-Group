   void reverse(node* start , node* end)
    {
        node* prev = NULL;
        node* cur = start;
        node* n = start ->next;
        while(prev != end)
        {
            cur -> next = prev;
            prev = cur;
            cur = n;
             if( n != NULL) n = n ->next;
        }
        
    }
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head == NULL || head -> next == NULL || k == 1) return head;
        node* start = head;
        node* end = head;
        int inc = k - 1;
        
        while(inc--)
        {
            end = end -> next;
            if( end == NULL) return head;
        }
       
        node* nextHead = reverseKGroup(end -> next , k);
         reverse(start , end);
        start->next = nextHead;
        return end;
    }
